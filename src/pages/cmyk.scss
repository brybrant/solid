@use 'sass:math';

$maxScale: 1.58;

@for $i from 0 to 10 {
  $progress: $i * math.div(100%, 10);
  $scale: $i * math.div($maxScale, 5);

  @if $progress > 50% {
    $scale: ($maxScale * 2) - $scale;
  }

  @keyframes expand#{$i + 1} {
    @if $i > 0 {
      0% {
        transform: scale($scale);
      }
    }
    @if $progress > 50% {
      #{$progress - 50%} {
        transform: scale($maxScale);
      }
    }
    #{$progress} {
      transform: scale(0);
    }
    @if $progress < 50% {
      #{$progress + 50%} {
        transform: scale($maxScale);
      }
    }
    100% {
      transform: scale($scale);
    }
  }
}

$backgroundScale: math.cos(15deg) + math.sin(15deg);

.cmyk {
  .background {
    width: max(100vw * $backgroundScale, 100vh * $backgroundScale);
    height: max(100vw * $backgroundScale, 100vh * $backgroundScale);
    filter: blur(16px);
  }
  .a, .b, .c {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    flex-flow: row wrap;
    mix-blend-mode: multiply;
    & > div {
      width: 10%;
      height: 10%;
      border-radius: 100%;
    }
  }
  .a > div {
    background: #ff0;
  }
  .b {
    transform: rotate(75deg);
    & > div {
      background: #f0f;
    }
  }
  .c {
    transform: rotate(195deg);
    & > div {
      background: #0ff;
    }
  }
}

@for $i from 1 through 10 {
  .cmyk {
    .a > div:nth-child(10n+#{$i}) {
      animation: 24s linear 0s infinite expand#{$i};
    }
    .b > div:nth-child(10n+#{$i}) {
      animation: 12s linear 0s infinite expand#{$i};
    }
    .c > div:nth-child(10n+#{$i}) {
      animation: 8s linear 0s infinite expand#{$i};
    }
  }
}

.cmyk {
  h1 {
    font-family: "Kalam", cursive;
  }
  p, .button {
    font-family: "Protest Riot", cursive;
  }
}
