@use 'sass:math';

$svg-size: 8;
$svg-center: math.div($svg-size, 2); // 4
$led0-width: 2;
$led0-height: 7;
$led0-radius: math.div($led0-width, 2); // 1
$led0-aspect-ratio: math.div($led0-height, $led0-width); // 3.5
$led0-x: math.div($svg-size, 3); // 2.6666
$led0-x-offset: math.div($led0-x - $led0-width, 2); // 0.3333
$led0-y-offset: math.div($svg-size - $led0-height, 2); // 0.5

@function round($number: 0, $precision: 1) {
  $multiplier: math.pow(10, math.clamp(1, math.round($precision), 9));

  @return math.div(math.round($number * $multiplier), $multiplier);
}

.background {
  width: max(102vw, 102vh);
  height: max(102vw, 102vh);
  background: #000 url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' opacity='.5' viewBox='0 0 #{$svg-size} #{$svg-size}'%3E%3Crect fill='red' x='#{round($led0-x * 0 + $led0-x-offset, 3)}' y='#{$led0-y-offset}' width='#{$led0-width}' height='#{$led0-height}' rx='#{$led0-radius}' ry='#{$led0-radius}'/%3E%3Crect fill='lime' x='#{round($led0-x * 1 + $led0-x-offset, 3)}' y='#{$led0-y-offset}' width='#{$led0-width}' height='#{$led0-height}' rx='#{$led0-radius}' ry='#{$led0-radius}'/%3E%3Crect fill='blue' x='#{round($led0-x * 2 + $led0-x-offset, 3)}' y='#{$led0-y-offset}' width='#{$led0-width}' height='#{$led0-height}' rx='#{$led0-radius}' ry='#{$led0-radius}'/%3E%3C/svg%3E") 0 0 / 12.5% 12.5%;
}

.pixel {
  position: relative;
  width: 12.5%;
  height: 12.5%;
}

.subpixels {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-position: center;
  background-size: contain;
  mix-blend-mode: screen;
  will-change: opacity;
}

$blur-divisor: math.div(5, 1.8); // 2.7777

@mixin subpixels-background($led-blur: 0) {
  $led-blur2: $led-blur * 2;
  $led-std: round(math.div($led-blur, $blur-divisor), 3);
  $led-width: $led0-x - $led-blur2;
  $led-height: ($led-width - $led-blur2) * $led0-aspect-ratio + $led-blur2;
  $led-half-width: math.div($led-width, 2);
  $led-scale: math.div($led0-height, $led-height - $led-blur2);

  // LED coordinates

  $led-y-offset: round(math.div($svg-size - $led-height, 2), 3);
  $led-subtractor: math.div($led0-x, $led-scale);
  $led1-x: round($svg-center - $led-subtractor - $led-half-width, 3);
  $led2-x: round($svg-center - $led-half-width, 3);
  $led3-x: round($svg-center + $led-subtractor - $led-half-width, 3);

  // LED round

  $led-width-round: round($led-width, 3);
  $led-height-round: round($led-height, 3);
  $led-radius: round($led-half-width, 3);

  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 #{$svg-size} #{$svg-size}'%3E%3Cfilter id='z' filterUnits='userSpaceOnUse'%3E%3CfeGaussianBlur stdDeviation='#{$led-std}'/%3E%3C/filter%3E%3Cstyle%3Erect{filter:url(%23z);mix-blend-mode:screen}%3C/style%3E%3Crect fill='red' x='#{$led1-x}' y='#{$led-y-offset}' width='#{$led-width-round}' height='#{$led-height-round}' rx='#{$led-radius}' ry='#{$led-radius}'/%3E%3Crect fill='lime' x='#{$led2-x}' y='#{$led-y-offset}' width='#{$led-width-round}' height='#{$led-height-round}' rx='#{$led-radius}' ry='#{$led-radius}'/%3E%3Crect fill='blue' x='#{$led3-x}' y='#{$led-y-offset}' width='#{$led-width-round}' height='#{$led-height-round}' rx='#{$led-radius}' ry='#{$led-radius}'/%3E%3C/svg%3E");
  transform: scale(round($led-scale));
}

.subpixels1 {
  @include subpixels-background(0.41667);
}

.subpixels2 {
  @include subpixels-background(0.5);
}
