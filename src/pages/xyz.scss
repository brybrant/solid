@use 'sass:math';

// even row keyframes
@for $i from 0 to 6 {
  $progress: $i * math.div(100%, 6);
  $position: 50% + ($i * math.div(50%, 3));

  @if $progress > 50% {
    $position: 200% - $position;
  }

  @keyframes riseEven#{$i + 1} {
    @if $i > 0 {
      0% {
        transform: translateY(-$position);
      }
    }
    @if $progress > 50% {
      #{$progress - 50%} {
        transform: translateY(-100%);
      }
    }
    #{$progress} {
      transform: translateY(-50%);
    }
    @if $progress < 50% {
      #{$progress + 50%} {
        transform: translateY(-100%);
      }
    }
    100% {
      transform: translateY(-$position);
    }
  }
}

// odd row keyframes
@for $i from 0 to 7 {
  $progress: $i * math.div(100%, 7);
  $position: 100% - ($i * math.div(50%, 3.5));

  @if $progress > 50% {
    $position: 100% - $position;
  }

  @keyframes riseOdd#{$i + 1} {
    @if $i > 0 {
      0% {
        transform: translate(50%, -$position);
      }
    }
    @if $progress > 50% {
      #{$progress - 50%} {
        transform: translate(50%, -50%);
      }
    }
    #{$progress} {
      transform: translate(50%, -100%);
    }
    @if $progress < 50% {
      #{$progress + 50%} {
        transform: translate(50%, -50%);
      }
    }
    100% {
      transform: translate(50%, -$position);
    }
  }
}

$sqrt3: math.sqrt(3);
$sqrt2: math.sqrt(2);

.xyz {
  .background {
    width: max(80vw, 80vh);
    height: max(100vw, 100vh);
    transform: translate(-50%, -50%) scaleX($sqrt3);
  }
  .a {
    position: relative;
    width: 12.5%;
    height: 10%;
    &:before, &:after {
      content: '';
      position: absolute;
      display: block;
      width: 50%;
    }
    &:before {
      top: 100%;
      left: 0;
      height: 200%;
      transform: skewY(45deg) translateY(-12.5%);
      background: radial-gradient(closest-corner, #006, #00f) 100% 0% / 200% 200%;
    }
    &:after {
      top: 100%;
      right: 0;
      height: 200%;
      transform: skewY(-45deg) translateY(-12.5%);
      background: radial-gradient(closest-corner, #600, #f00) 0% 0% / 200% 200%;
    }
    &:nth-child(13n-12) {
      margin-left: 12.5%;
    }
    &:nth-child(13n-7) {
      margin-right: 12.5%;
    }
    &:nth-child(13n) {
      margin-right: 12.5%;
    }
  }
  .b {
    position: absolute;
    top: 0;
    left: 0;
    width: 50%;
    height: 50%;
    transform: rotate(45deg) scale($sqrt2) translate(50%);
    background: radial-gradient(closest-corner, #080, #0f0) 100% 100% / 200% 200%;
  }
}

@for $i from 1 through 6 {
  .xyz .a:nth-child(13n+#{$i}) {
    animation: 6s linear 0s infinite riseEven#{$i};
  }
}

@for $i from 1 through 7 {
  .xyz .a:nth-child(13n+#{$i + 6}) {
    animation: 6s linear 0s infinite riseOdd#{$i};
  }
}

.xyz {
  h1 {
    font-family: "Poppins", sans-serif;
    font-size: 7.5rem;
    font-weight: 700;
  }
  p, .button {
    font-family: "Outfit", sans-serif;
    font-weight: 700;
  }
}
