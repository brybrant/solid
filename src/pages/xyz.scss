@use 'sass:math';

// even row keyframes
@for $i from 0 to 6 {
  $progress: $i * math.div(100%, 6);

  @keyframes riseEven#{$i + 1} {
    @if $progress > 50% {
      #{$progress - 50%} {
        transform: translateY(-100%);
      }
    }

    @if $progress > 0% {
      #{$progress} {
        transform: translateY(-50%);
      }
    }

    @if $progress < 50% {
      #{$progress + 50%} {
        transform: translateY(-100%);
      }
    }
  }
}

// odd row keyframes
@for $i from 0 to 6 {
  $progress: $i * math.div(100%, 6);

  @keyframes riseOdd#{$i + 1} {
    @if $progress > 50% {
      #{$progress - 50%} {
        transform: translateY(-50%);
      }
    }

    @if $progress > 0% {
      #{$progress} {
        transform: translateY(-100%);
      }
    }

    @if $progress < 50% {
      #{$progress + 50%} {
        transform: translateY(-50%);
      }
    }
  }
}

$sqrt3: math.sqrt(3);
$sqrt2: math.sqrt(2);

.xyz {
  .background {
    width: max(80vw, 80vh);
    height: max(100vw, 100vh);
    transform: translate(-50%, -50%) scaleX($sqrt3);
  }

  h1 {
    font-weight: 700;
    font-size: 7.5rem;
    font-family: Poppins, sans-serif;
  }

  p, .button {
    font-weight: 700;
    font-family: Outfit, sans-serif;
  }

  .a {
    position: relative;
    width: 12.5%;
    height: 10%;
    will-change: transform;

    &:before, &:after {
      content: '';
      position: absolute;
      display: block;
      width: 50%;
    }

    &:before {
      top: 100%;
      left: 0;
      height: 200%;
      background: radial-gradient(
        closest-corner,
        oklch(20% 25% 260),
        oklch(40% 20% 260)
      ) 100% 0% / 200% 200%;
      transform: skewY(45deg) translateY(-12.5%);
    }

    &:after {
      top: 100%;
      right: 0;
      height: 200%;
      background: radial-gradient(
        closest-corner,
        oklch(40% 20% 260),
        oklch(60% 15% 260)
      ) 0% 0% / 200% 200%;
      transform: skewY(-45deg) translateY(-12.5%);
    }

    &:nth-child(13n+1) {
      margin-left: 12.5%;
    }

    &:nth-child(13n+6) {
      margin-right: 12.5%;
    }

    &:nth-child(13n+7) {
      margin-left: 6.25%;
    }

    &:nth-child(13n) {
      margin-right: 6.25%;
    }
  }

  .b {
    position: absolute;
    top: 0;
    left: 0;
    width: 50%;
    height: 50%;
    background: radial-gradient(
      closest-corner,
      oklch(60% 15% 260),
      oklch(80% 10% 260)
    ) 100% 100% / 200% 200%;
    transform: rotate(45deg) scale($sqrt2) translate(50%);
  }
}

// even row animation
@for $i from 1 through 6 {
  $position: 50% + math.div(100%, 6) * ($i - 1);

  @if $i > 4 {
    $position: 200% - $position;
  }

  .xyz .a:nth-child(13n+#{$i}) {
    transform: translateY(-$position);
    animation: 6s linear 0s infinite riseEven#{$i};
  }
}

// odd row animation
@for $i from 1 through 7 {
  $position: 100% - math.div(100%, 6) * ($i - 1);

  @if $i > 4 {
    $position: 100% - $position;
  }

  .xyz .a:nth-child(13n+#{$i + 6}) {
    transform: translateY(-$position);
    animation: 6s linear 0s infinite riseOdd#{math.max(1, $i % 7)};
  }
}
